---
layout: post
title: code snippets
---

h1. {{ page.title }}

p(meta). 28 Sep 2014 - shenzhen

1.读取android节点信息:
{% highlight java %}
public void readNodeInfo(String node){
	String result = "";
	try{
		FileReader mFileReader = new FileReader(node);
		BufferedReader mBuffer = new BufferedReader(mFileReader, 1024);
		result = mBuffer.readLine(); // for single line
		// for multi-line
		/*String temp = "";
		while((temp = mBuffer.readLine()) != null){
			result += (temp + "\n");
		}*/
		mBuffer.close();
	}catch(IOException e){
		e.printStackTrace();
	}
	Log.d("quinn", "node info is : " + result);
}
{% endhighlight %}

2.执行shell命令并读取执行结果:
{% highlight java %}
public void execCommand(String commandStr){
    try{
        Process mProcess = Runtime.getRuntime().exec("sh"); 
	// or Runtime.getRuntime().exec("su"); if root needed.
	OutputStream out = mProcessgetOutputStream();
        DataOutputStream mDataOutputStream = new DataOutputStream(out);
        mDataOutputStream.write(commandStr.getBytes());
        mDataOutputStream.flush();
        // if commandStr is simple command:
	// 	like echo .. we just close mDataOutputStream here:
        mDataOutputStream.close();
        // if commandStr is complicated command:
	//	like logcat .. we need use while loop to read:
	InputStream inStream = mProcess.getInputStream();
        BufferedReader inBuffer = new BufferedReader(inStream);
	InputStream errStream = mProcess.getErrorStrean();
        BufferedReader errBuffer = new BufferedReader(errBuffer);
        String inStr = "", errStr = "";
        Log.d("quinn", "normal log:");
        while((inStr = inBuffer.readLine()) != null){
            Log.d("quinn", inStr);            
        }
        Log.d("quinn", "err log:");
        while((errStr = errBuffer.readLine()) != null){
            Log.d("quinn", errStr);
        }
        // close resources here
        inBuffer.close();
        errBuffer.close();
    }
}
{% endhighlight %}
